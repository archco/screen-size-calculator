{"version":3,"sources":["webpack://ScreenSizeCalculator/webpack/universalModuleDefinition","webpack://ScreenSizeCalculator/webpack/bootstrap","webpack://ScreenSizeCalculator/./src/screen-size-calculator.ts","webpack://ScreenSizeCalculator/./src/util.ts"],"names":[],"mappings":"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","file":"screen-size-calculator.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ScreenSizeCalculator\"] = factory();\n\telse\n\t\troot[\"ScreenSizeCalculator\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/screen-size-calculator.ts\");\n","import {\n  cmToInch,\n  decimal,\n  getDiagonal,\n  inchToCm,\n} from './util';\n\n/** width, height, diagonal */\nexport type AspectRatio = [number, number, number];\n/** 'inch' or 'cm'. */\nexport type Unit = 'inch'|'cm';\n/** width, height, diagonal */\ntype SizeValues = [number, number, number];\n\nexport interface Options {\n  width?: number;\n  height?: number;\n  diagonal?: number;\n  /** The aspect ratio. e.g. '16:9', '4:3', '2.39:1' */\n  aspectRatio?: string;\n  /** 'inch' or 'cm'. default is 'inch' */\n  unit?: Unit;\n}\n\nexport interface ScreenSize {\n  width: number;\n  height: number;\n  diagonal: number;\n  /** 'inch' or 'cm'. */\n  unit: Unit;\n}\n\nexport class ScreenSizeCalculator {\n  options: Options;\n  ratio: AspectRatio;\n  screenSize: ScreenSize;\n\n  constructor(options: Options = {}) {\n    this.options = {...this.getDefaultOptions(), ...options};\n    this.screenSize = this.calculate();\n  }\n\n  getDefaultOptions(): Options {\n    return {\n      aspectRatio: '16:9',\n      unit: 'inch',\n    };\n  }\n\n  calculate(): ScreenSize {\n    this.setProperties();\n    const {width, height, diagonal} = this.options;\n    let size: SizeValues;\n    if (diagonal) {\n      size = this.getScreenSizeFromDiagonal(diagonal);\n    } else if (width) {\n      size = this.getScreenSizeFromWidth(width);\n    } else {\n      size = this.getScreenSizeFromHeight(height);\n    }\n    const [w, h, d] = size;\n    return {\n      width: w,\n      height: h,\n      diagonal: d,\n      unit: this.options.unit,\n    };\n  }\n\n  setProperties(): void {\n    // set aspect ratio.\n    const [w, h] = this.options.aspectRatio.split(':').map(x => parseFloat(x));\n    this.ratio = [w, h, getDiagonal(w, h)];\n    // validate options.\n    const {width, height, diagonal} = this.options;\n    if (!width && !height && !diagonal) {\n      throw ReferenceError('At least one of width, height or diagonal must exist.');\n    }\n  }\n\n  /**\n   * Returns screen size data.\n   *\n   * @param {Unit} [unit] 'inch' or 'cm'\n   * @param {number} [precision=2] precision of the float number.\n   * @returns {ScreenSize}\n   * @memberof ScreenSizeCalculator\n   */\n  getData(unit?: Unit, precision: number = 2): ScreenSize {\n    const { width, height, diagonal } = this.screenSize;\n    const [w, h, d] = [width, height, diagonal].map(x => {\n      if (unit && unit !== this.screenSize.unit) {\n        switch (unit) {\n          case 'cm': x = inchToCm(x); break;\n          case 'inch': x = cmToInch(x); break;\n        }\n      }\n      return decimal(x, precision);\n    });\n    return {\n      width: w,\n      height: h,\n      diagonal: d,\n      unit: unit || this.screenSize.unit,\n    };\n  }\n\n  protected getScreenSizeFromDiagonal(diagonal: number): SizeValues {\n    const [w, h, d] = this.ratio;\n    const width = diagonal * w / d;\n    const height = diagonal * h / d;\n    return [width, height, diagonal];\n  }\n\n  protected getScreenSizeFromWidth(width: number): SizeValues {\n    const [w, h, d] = this.ratio;\n    const height = width * h / w;\n    const diagonal = width * d / w;\n    return [width, height, diagonal];\n  }\n\n  protected getScreenSizeFromHeight(height: number): SizeValues {\n    const [w, h, d] = this.ratio;\n    const width = height * w / h;\n    const diagonal = height * d / h;\n    return [width, height, diagonal];\n  }\n}\n\nexport default ScreenSizeCalculator;\n","export function getDiagonal(width: number, height: number): number {\n  return Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n}\n\n/**\n * Returns the value of a number rounded to the nearest precision number.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n *\n * @param {number} num\n * @param {number} precision\n * @returns {number}\n */\nexport function decimal(num: number, precision: number): number {\n  const factor = Math.pow(10, precision);\n  return Math.round(num * factor) / factor;\n}\n\nexport function cmToInch(num: number): number {\n  return num / 2.54;\n}\n\nexport function inchToCm(num: number): number {\n  return num * 2.54;\n}\n"],"sourceRoot":""}