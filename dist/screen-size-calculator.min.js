!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.ScreenSizeCalculator=e():t.ScreenSizeCalculator=e()}(this,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},n.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s="./src/screen-size-calculator.ts")}({"./src/screen-size-calculator.ts":
/*!***************************************!*\
  !*** ./src/screen-size-calculator.ts ***!
  \***************************************/
/*! exports provided: ScreenSizeCalculator, default */function(t,e,n){"use strict";n.r(e),n.d(e,"ScreenSizeCalculator",function(){return o});var r=n(/*! ./util */"./src/util.ts"),i=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},o=function(){function t(t){void 0===t&&(t={}),this.options=i({},this.getDefaultOptions(),t),this.screenSize=this.calculate()}return t.prototype.getDefaultOptions=function(){return{aspectRatio:"16:9",unit:"inch"}},t.prototype.calculate=function(){this.setProperties();var t,e=this.options,n=e.width,r=e.height,i=e.diagonal;return{width:(t=i?this.getScreenSizeFromDiagonal(i):n?this.getScreenSizeFromWidth(n):this.getScreenSizeFromHeight(r))[0],height:t[1],diagonal:t[2],unit:this.options.unit}},t.prototype.setProperties=function(){var t=this.options.aspectRatio.split(":").map(function(t){return parseFloat(t)}),e=t[0],n=t[1];this.ratio=[e,n,Object(r.getDiagonal)(e,n)];var i=this.options,o=i.width,c=i.height,u=i.diagonal;if(!o&&!c&&!u)throw ReferenceError("At least one of width, height or diagonal must exist.")},t.prototype.getData=function(t,e){var n=this;void 0===e&&(e=2);var i=this.screenSize,o=[i.width,i.height,i.diagonal].map(function(i){if(t&&t!==n.screenSize.unit)switch(t){case"cm":i=Object(r.inchToCm)(i);break;case"inch":i=Object(r.cmToInch)(i)}return Object(r.decimal)(i,e)});return{width:o[0],height:o[1],diagonal:o[2],unit:t||this.screenSize.unit}},t.prototype.getScreenSizeFromDiagonal=function(t){var e=this.ratio,n=e[0],r=e[1],i=e[2];return[t*n/i,t*r/i,t]},t.prototype.getScreenSizeFromWidth=function(t){var e=this.ratio,n=e[0];return[t,t*e[1]/n,t*e[2]/n]},t.prototype.getScreenSizeFromHeight=function(t){var e=this.ratio,n=e[0],r=e[1];return[t*n/r,t,t*e[2]/r]},t}();e.default=o},"./src/util.ts":
/*!*********************!*\
  !*** ./src/util.ts ***!
  \*********************/
/*! exports provided: getDiagonal, decimal, cmToInch, inchToCm */function(t,e,n){"use strict";function r(t,e){return Math.sqrt(Math.pow(t,2)+Math.pow(e,2))}function i(t,e){var n=Math.pow(10,e);return Math.round(t*n)/n}function o(t){return t/2.54}function c(t){return 2.54*t}n.r(e),n.d(e,"getDiagonal",function(){return r}),n.d(e,"decimal",function(){return i}),n.d(e,"cmToInch",function(){return o}),n.d(e,"inchToCm",function(){return c})}})});